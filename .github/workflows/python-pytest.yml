name: PyTest

on:
  workflow_dispatch:
  push:
    paths:
      - '**.py'

jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.12', '3.13' ]

    name: PyTest py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev,test]

      - name: Run tests
        run: |
          pytest --cov --junitxml=junit-py${{ matrix.python-version }}-${{ matrix.os }}.xml -o junit_family=legacy

      - name: Upload test results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-py${{ matrix.python-version }}-${{ matrix.os }}
          path: junit-py${{ matrix.python-version }}-${{ matrix.os }}.xml

  codecov:
    name: Upload results to Codecov
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs: test

    environment:
      name: codecov

    steps:
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          pattern: junit-report-*
          path: .
          merge-multiple: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
