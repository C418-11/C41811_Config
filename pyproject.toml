[build-system]
requires = ["setuptools>=75.8.0", "setuptools-scm>=8.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version"]
name = "C41811.Config"
description = "Simplifies config management with flexible API and formats."
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "C418____11", email = "C418-11@qq.com" }
]
license = "MIT"
license-files = ["LICENSE"]
keywords = ["config", "yaml", "toml", "json"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: Chinese (Simplified)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",  # todo add 3.14 when it's released
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "pydantic~=2.11.1",
    "wrapt~=1.17.2",
    "pyrsistent~=0.20.0",
    "portalocker~=3.1.1",
    "mypy-extensions>=1.0,<1.2",
]

[project.urls]
"Bug Tracker" = "https://github.com/C418-11/C41811_Config/issues"
"Source Code" = "https://github.com/C418-11/C41811_Config"
"Documentation" = "https://C41811Config.readthedocs.io"

[project.optional-dependencies]
docs = [
    "setuptools-scm>=8.2,<8.4",
    "sphinx~=8.2.3",
    "sphinx-autoapi~=3.6.0",
    "sphinx-copybutton~=0.5.2",
    "furo==2024.8.6",
]
dev = [
    "PyYAML~=6.0.2",
    "ruamel.yaml~=0.18.10",
    "toml~=0.10.2",
    "hjson~=3.1.0"
]
tox = [
    "tox~=4.25.0",
]
test = [
    "pytest>=8.3.5,<8.5.0",
    "pytest-html~=4.1.1",
    "pytest-cov>=6.0,<6.2",
]
flake8 = [
    "flake8~=7.2.0",
    "flake8-html~=0.4.3",
]
mypy = [
    "mypy>=1.15,<1.17",
    "pytest>=8.3.5,<8.5.0",
    "ruamel.yaml~=0.18.10",
    "types-PyYAML",
    "types-toml",
    "types-setuptools",
]
PyYamlSL = ["PyYAML~=6.0.2"]
RuamelYamlSL = ["ruamel.yaml~=0.18.10"]
TomlSL = ["toml~=0.10.2"]
HJsonSL = ["hjson~=3.1.0"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_file = "src/C41811/Config/_version.py"
version_scheme = "release-branch-semver"
local_scheme = "node-and-date"
fallback_version = "0.0+UNKNOWN"

[tool.pytest.ini_options]
addopts = "-v --doctest-modules --ignore-glob=docs/conf.py"

[tool.flake8]
max-line-length = 120  # flake8暂时不支持pyproject.toml中的配置
show-source = true
doctests = true
max-complexity = 10
statistics = true

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
isort.force-single-line = true
isort.relative-imports-order = "closest-to-furthest"
select = [
    # 基础规则
    "F", # flake8
    "E", # pycodestyle (errors)
    "W", # pycodestyle (warnings)

    # flake8插件
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "PIE", # flake8-pie
    "RET", # flake8-return
    "RSE", # flake8-raise
    "SIM", # flake8-simplify
    "YTT", # flake8-2020

    # 独立功能插件
    "UP",   # pyupgrade (现代语法)
    "I",    # isort (导入排序)
    "N",    # pep8-naming (命名规范)
    "TRY",  # tryceratops (异常处理)
    "FLY",  # flynt (f-string转换)
    "FURB", # refurb (代码简化)
    "RUF",  # ruff (专属规则)
    "PERF", # perflint (性能优化)
    "PGH",  # pygrep-hooks (type: ignore & noqa 参数检查)

    # 静态分析/复杂度
    "C90", # mccabe (圈复杂度)
    "PLC", # pylint (conventions)
    "PLE", # pylint (errors)
    "PLW", # pylint (warnings)

    # 其他规则
    "ISC001", # 隐式字符串连接
]
ignore = [  # ruff推荐忽略以避免和formatter冲突
    "W191", # tab-indentation
    "E111", # indentation-with-invalid-multiples
    "E114", # indentation-with-invalid-multiple-comment
    "E117", # over-indented
]

[tool.mypy]
strict = true
pretty = true
allow_redefinition = true
enable_error_code = [
    "ignore-without-code",
    "explicit-override",
    "mutable-override",
    "truthy-iterable"
]

[tool.coverage.run]
omit = [
    "**/_version.py",
]

[tool.coverage.report]
exclude_also = [
    ":(\\s*#.*?)?\\s*[\\r\\n]+\\s+(\\.\\.\\.|pass)(\\s*#.*)?",
    "except ImportError:",
]

[tool.tox]
envlist = ["py312", "py313", "flake8", "mypy"]
#envlist = ["py312", "py313", "py314", "flake8", "mypy"]  # todo uncomment when pydantic supports 3.14

[tool.tox.env_run_base]
use_develop = true
extras = ["dev", "test"]
commands = [
    ["pytest"],
]

[tool.tox.env.flake8]
extras = ["flake8"]
commands = [
    ["flake8",
        "--doctests", "--max-line-length=120", "--max-complexity=10",
        "--show-source", "--count", "--statistics", "--ignore=E122,E121,E126,W503,E123,E704,F401,E701,E203",
        "tests", "src"
    ],
]

[tool.tox.env.mypy]
extras = ["mypy"]
commands = [
    ["mypy", "tests"],
    ["pip", "uninstall", "-y", "C41811.Config"],
    ["mypy", "src"],
]

[tool.tox.env.prepare-doc]
base_python = ["py313"]
allowlist_externals = ["npm", "lessc"]
extras = ["dev", "test", "flake8"]
commands_pre = [
    ["npm", "install", "-g", "less"],
]
commands = [
    ["lessc", "./docs/_static/.pygments_darcula.less", "./docs/_static/pygments_darcula.css"],
    ["-",
        "pytest",
        "--html=./docs/_static/_pytest/index.html",
        "--cov=src", "--cov-report=term-missing", "--cov-report=html:docs/_static/_coverage"
    ],
    [
        "flake8",
        "--doctests", "--max-line-length=120", "--max-complexity=10",
        "--show-source", "--count", "--statistics", "--ignore=E122,E121,E126,W503,E123,E704,F401,E701,E203",
        "--exit-zero", "--format=html", "--htmldir=./docs/_static/_flake8", "--tee",
        "tests", "src"
    ],
]

[tool.tox.env.doc]
extras = ["docs"]
allowlist_externals = ["tox"]
commands = [
    ["tox", "-e", "prepare-doc"],
    ["sphinx-build", "-b", "html", "./docs", "./docs/_build"],
]
